{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-05-17T17:36:39.589Z",
    "end": "2025-05-17T17:37:27.973Z",
    "duration": 48384,
    "testsRegistered": 6,
    "passPercent": 33.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 4,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "203ef9ba-cd6d-4bb5-acde-74de7e56cc28",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "82cd672f-d67c-4390-9748-44e4ba31a97d",
          "title": "DemoQA Books API Test Suite",
          "fullFile": "C:\\Users\\STL\\WebstormProjects\\cover_go\\tests\\demo_qa_apt.test.ts",
          "file": "\\tests\\demo_qa_apt.test.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "DemoQA Books API Test Suite \"before all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(this, void 0, void 0, function* () {\n        const userResponse = yield booksAPI.createUser(username, password);\n        utils_1.Utils.logger.info('Response body : ' + JSON.stringify(userResponse.data, null, 2));\n        utils_1.Utils.logger.info('Response status : ' + userResponse.status);\n        (0, chai_1.expect)(booksAPI.userId).to.be.a('string');\n        const tokenResponse = yield booksAPI.generateToken(username, password);\n        utils_1.Utils.logger.info('Token Generated: ' + JSON.stringify(tokenResponse.data, null, 2));\n        utils_1.Utils.logger.info('Response status : ' + userResponse.status);\n        (0, chai_1.expect)(booksAPI.token).to.be.a('string');\n    })",
              "err": {},
              "uuid": "95806e51-dd9d-4838-b7be-d3548ca388db",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "DemoQA Books API Test Suite \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(this, void 0, void 0, function* () {\n        utils_1.Utils.logger.info(\"Call Completed ###########################\");\n    })",
              "err": {},
              "uuid": "6f35d60f-b1b7-4858-9649-fd5f384742c2",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[testcase_api] Should fetch list of books",
              "fullTitle": "DemoQA Books API Test Suite [testcase_api] Should fetch list of books",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(this, void 0, void 0, function* () {\n        const books = yield booksAPI.getBooks();\n        (0, chai_1.expect)(books).to.be.an('array').that.is.not.empty;\n    })",
              "err": {},
              "uuid": "b85b122e-0a49-43e1-848a-a05df35bd300",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "[testcase_api]  Should fetch a book by ISBN",
              "fullTitle": "DemoQA Books API Test Suite [testcase_api]  Should fetch a book by ISBN",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(this, void 0, void 0, function* () {\n        const books = yield booksAPI.getBooks();\n        const isbn = books[0].isbn;\n        const book = yield booksAPI.getBookByISBN(isbn);\n        utils_1.Utils.logger.info(`ðŸ“– Book Details (ISBN: ${isbn}):` + book);\n        (0, chai_1.expect)(book.isbn).to.equal(isbn);\n    })",
              "err": {},
              "uuid": "82073710-22ef-4960-91ae-371ad94d48d4",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "[testcase_api]  Should add a book to user collection",
              "fullTitle": "DemoQA Books API Test Suite [testcase_api]  Should add a book to user collection",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(this, void 0, void 0, function* () {\n        const books = yield booksAPI.getBooks();\n        const isbn = books[0].isbn;\n        const status = yield booksAPI.addBookToUser(isbn);\n        utils_1.Utils.logger.info(`Book Added to Collection (ISBN: ${isbn}), Status:` + status);\n        (0, chai_1.expect)(status).to.equal(201);\n    })",
              "err": {},
              "uuid": "06f6489d-7c30-4b0a-a720-7c76be6d95a1",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "[testcase_api]  Should delete a book from user collection",
              "fullTitle": "DemoQA Books API Test Suite [testcase_api]  Should delete a book from user collection",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(this, void 0, void 0, function* () {\n        const books = yield booksAPI.getBooks();\n        const isbn = books[0].isbn;\n        const status = yield booksAPI.deleteBookFromUser(isbn);\n        utils_1.Utils.logger.info(`Book Deleted from Collection (ISBN: ${isbn}), Status:` + status);\n        (0, chai_1.expect)(status).to.equal(204);\n    })",
              "err": {},
              "uuid": "bb273499-2ac0-4f65-b27a-118a96c7367e",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b85b122e-0a49-43e1-848a-a05df35bd300",
            "82073710-22ef-4960-91ae-371ad94d48d4",
            "06f6489d-7c30-4b0a-a720-7c76be6d95a1",
            "bb273499-2ac0-4f65-b27a-118a96c7367e"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "64a7df13-7d02-4993-b6df-cdee81380819",
          "title": "Demo QA Test Suite",
          "fullFile": "C:\\Users\\STL\\WebstormProjects\\cover_go\\tests\\demo_qa.test.ts",
          "file": "\\tests\\demo_qa.test.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Demo QA Test Suite\"",
              "fullTitle": "Demo QA Test Suite \"before each\" hook in \"Demo QA Test Suite\"",
              "timedOut": false,
              "duration": 20760,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(this, void 0, void 0, function* () {\n        console.log('ðŸ”§ Initializing...');\n        basePage = new base_page_1.BasePage();\n        const page = yield basePage.initialize();\n        homePage = new home_page_1.HomePage(page);\n        practiceFormPage = new practice_form_page_1.PracticeFormPage(page);\n        webTablePage = new web_table_page_1.WebTablePage(page);\n        yield homePage.goto();\n        console.log('âœ… Initialization complete');\n    })",
              "err": {},
              "uuid": "4f88cfe9-0008-4387-a28b-732907c5b639",
              "parentUUID": "64a7df13-7d02-4993-b6df-cdee81380819",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Demo QA Test Suite\"",
              "fullTitle": "Demo QA Test Suite \"after each\" hook in \"Demo QA Test Suite\"",
              "timedOut": false,
              "duration": 366,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(this, void 0, void 0, function* () {\n        yield basePage.close();\n        console.log('Test closed');\n    })",
              "err": {},
              "uuid": "e569df1f-5fd1-4d3b-8599-7e8102670d87",
              "parentUUID": "64a7df13-7d02-4993-b6df-cdee81380819",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "[testcase_ui] Test to check form",
              "fullTitle": "Demo QA Test Suite [testcase_ui] Test to check form",
              "timedOut": false,
              "duration": 11254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(this, void 0, void 0, function* () {\n        yield homePage.navigateToFormPage();\n        yield practiceFormPage.fillForm();\n        yield practiceFormPage.verifyDataUpdatedOnForm();\n    })",
              "err": {},
              "uuid": "8da9fedc-a09c-49d5-91f6-6ff43fdb683c",
              "parentUUID": "64a7df13-7d02-4993-b6df-cdee81380819",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[testcase_ui] Test to check web table",
              "fullTitle": "Demo QA Test Suite [testcase_ui] Test to check web table",
              "timedOut": false,
              "duration": 2605,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "__awaiter(this, void 0, void 0, function* () {\n        yield homePage.navigateToWebTablePage();\n        yield webTablePage.clickAddButton();\n        yield webTablePage.fillForm();\n        yield webTablePage.verifyRowValuesBeforeUpdate();\n        yield webTablePage.editLastRow();\n        yield webTablePage.verifyRowValuesAfterUpdate();\n        yield webTablePage.deleteLastRow();\n    })",
              "err": {},
              "uuid": "991ab729-a9e5-4eb0-8ee5-9a7b9d710805",
              "parentUUID": "64a7df13-7d02-4993-b6df-cdee81380819",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8da9fedc-a09c-49d5-91f6-6ff43fdb683c",
            "991ab729-a9e5-4eb0-8ee5-9a7b9d710805"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13859,
          "root": false,
          "rootEmpty": false,
          "_timeout": 40000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mocha-report",
        "reportFilename": "report",
        "quiet": "true"
      },
      "version": "6.2.0"
    }
  }
}